# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/04_metrics.ipynb (unless otherwise specified).

__all__ = ['compute_bleu']

# Cell
from nltk.translate.bleu_score import corpus_bleu
from fastai2.basics import *
from transformers import PreTrainedTokenizer

from fastai_transformers_utils.generated_lm import GenerateArgs

# Cell
def compute_bleu(generated_seq2seq, generate_args: GenerateArgs, dec_tokenizer: PreTrainedTokenizer, val_dl):
    '''
        generated_seq2seq: seq2seq model with function generate_from_ids
        val_dl: (src_inp_ids, tgt_inp_ids, _)
            src_inp_ids: (bs, enc_seq_len), tgt_inp_ids: (bs, dec_seq_len)
    '''
    pred_toks = [] # [['', ''], ['', '', '']]
    tgt_toks = [] # [[['', '']], [['', '', '']]]

    for src_inp_ids, tgt_inp_ids, _ in progress_bar(val_dl):
        pred_ids = generated_seq2seq.generate_from_ids(src_inp_ids, generate_args) # (bs, max_len)
        for pred_id in pred_ids:
            pred_tok = dec_tokenizer.convert_ids_to_tokens(pred_id, skip_special_tokens=True)
            pred_toks.append(pred_tok)
        for tgt_id in tgt_inp_ids:
            tgt_tok = dec_tokenizer.convert_ids_to_tokens(tgt_id, skip_special_tokens=True)
            tgt_toks.append([tgt_tok])
    return corpus_bleu(tgt_toks, pred_toks)